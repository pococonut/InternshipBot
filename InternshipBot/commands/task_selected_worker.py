from aiogram import types
from create import dp
from db.commands import select_chosen_tasks, select_user
from commands.task_actions import check_user_values, get_check_page_title
from commands.general import print_stud, get_keyboard, read_user_values, short_long_task
from keyboard import task_worker_stud, back_to_std

task_chosen_values = read_user_values("task_chosen_values")


def show_short_stud(s):
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –°—Ç—É–¥–µ–Ω—Ç–µ.
    :param s: –°—Ç—Ä–æ–∫–∞ –º–æ–¥–µ–ª–∏ –ë–î, –æ—Ç–Ω–æ—Å—è—â–∞—è—Å—è –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å—Ç—É–¥–µ–Ω—Ç—É, —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–µ–º.
    :return: –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –°—Ç—É–¥–µ–Ω—Ç–µ
    """

    v = f"<b>–§–ò–û:</b> <a href='tg://user?id={s.telegram_id}'>{s.student_name}</a>\n" \
        f"<b>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b> {s.specialties}\n" \
        f"<b>–ö—É—Ä—Å:</b> {s.course}\n" \
        f"<b>–ó–Ω–∞–Ω–∏—è:</b> {s.knowledge}\n\n" \

    return v


def get_worker_chosen_task(usr_id, callback, dict_name, dict_values):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    :param usr_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
    :param callback: –ö–Ω–æ–ø–∫–∞
    :param dict_name: –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    :param dict_values: –°–ª–æ–≤–∞—Ä—å —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    :return: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    """

    tasks = select_chosen_tasks(usr_id)
    if not tasks:
        keyboard = get_keyboard(callback.from_user.id)
        return '–í–∞—à–∏ –∑–∞–¥–∞—á–∏ –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã.', keyboard

    dict_values = check_user_values(usr_id, dict_name, dict_values)
    current_task = tasks[dict_values[usr_id]]
    student_id = current_task.student_id
    students_list = student_id.split()
    msg_text = get_check_page_title(usr_id, callback, dict_name, dict_values, len(tasks))
    msg_text += f"üë®‚Äçüéì<b>–°—Ç—É–¥–µ–Ω—Ç\—ã</b>\n\n"

    if len(students_list) == 1:
        student = select_user(student_id)
        msg_text += show_short_stud(student)
    else:
        for student in students_list:
            msg_text += show_short_stud(select_user(student))

    msg_text += f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n\n"
    msg_text += f"üìö<b>–í—ã–±—Ä–∞–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞</b>\n\n" + short_long_task(current_task)

    return msg_text, task_worker_stud


@dp.callback_query_handler(text=["worker_chosen_tasks", 'tws_right', 'tws_left'])
async def worker_chosen_t(callback: types.CallbackQuery):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –∑–∞–¥–∞—á
    """

    usr_id = str(callback.from_user.id)
    msg_text, keyboard = get_worker_chosen_task(usr_id, callback.data, "task_chosen_values", task_chosen_values)
    await callback.message.edit_text(msg_text, parse_mode='HTML', reply_markup=keyboard, disable_web_page_preview=True)


@dp.callback_query_handler(text='tws_student')
async def show_more_stud(callback: types.CallbackQuery):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—É–¥–µ–Ω—Ç–µ.
    """

    usr_id = str(callback.from_user.id)
    tasks = select_chosen_tasks(usr_id)
    count_students = tasks[task_chosen_values[usr_id]].student_id

    if len(count_students.split()) == 1:
        student = select_user(tasks[task_chosen_values[usr_id]].student_id)
        await callback.message.edit_text(f"üë®‚Äçüéì<b>–°—Ç—É–¥–µ–Ω—Ç</b>\n\n" + print_stud(student), parse_mode='HTML',
                                         reply_markup=back_to_std)
    else:
        students_sh = ''
        students_lst = count_students.split()
        for s_id in count_students.split():
            student = select_user(s_id)
            students_sh += f"üë®‚Äçüéì<b>–°—Ç—É–¥–µ–Ω—Ç</b>\n\n" + print_stud(student)
            if students_lst[-1] != s_id:
                students_sh += "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n\n"

        await callback.message.edit_text(students_sh, parse_mode='HTML',
                                         reply_markup=back_to_std)
