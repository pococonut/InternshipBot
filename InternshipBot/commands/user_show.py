from aiogram import types

from create import dp
from db.commands import select_user
from commands.general import print_stud
from commands.get_menu import callback_check_authentication, message_check_authentication
from keyboard import change_user_ikb


def print_worker(w):
    """
    –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –¥–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
    :param w: –°—Ç—Ä–æ–∫–∞ –º–æ–¥–µ–ª–∏ –ë–î, –æ—Ç–Ω–æ—Å—è—â–∞—è—Å—è –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É, —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–µ–º.
    :return: –°—Ç—Ä–æ–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.
    """

    worker = f"<b>–§–ò–û:</b> {w.name}\n\n" \
             f"<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {w.phone}\n\n" \
             f"<b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {w.reg_date}\n"
    return worker


def show_user_info(t_id):
    """
    –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ç–∏–ø–∞.
    :param t_id: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ telegram
    :return: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """

    user_show = select_user(t_id)
    if user_show is not None:
        if user_show.type == 'student':
            return print_stud(user_show)
        else:
            return print_worker(user_show)


@dp.message_handler(commands=['show'])
@message_check_authentication
async def show_params(message: types.Message):
    """
    –§—É–Ω–∫—Ü–∏—è –ø–µ—á–∞—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """

    msg_text = f"üßë‚Äçüíª<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>\n\n" + show_user_info(message.from_user.id)
    await message.answer(msg_text, parse_mode='HTML', reply_markup=change_user_ikb)


@dp.callback_query_handler(text='show')
@callback_check_authentication
async def show_params_inline(callback: types.CallbackQuery):
    """
    –§—É–Ω–∫—Ü–∏—è –ø–µ—á–∞—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """

    msg_text = f"üßë‚Äçüíª<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>\n\n" + show_user_info(callback.from_user.id)
    await callback.message.edit_text(msg_text, parse_mode='HTML', reply_markup=change_user_ikb)