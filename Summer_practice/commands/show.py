from db.commands import user_type, select_user
from aiogram import types, Dispatcher
from keyboard import change_stud_ikb

# ----------------- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞\—Ä–∞–±–æ—Ç–Ω–∏–∫–∞ -----------------


def print_stud(s):
    stud = f"<b>–§–ò–û:</b> {s.student_name}\n\n" \
           f"<b>–í–£–ó:</b> {s.university}\n\n" \
           f"<b>–§–∞–∫—É–ª—å—Ç–µ—Ç:</b> {s.faculty}\n\n" \
           f"<b>–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:</b> {s.specialties}\n\n" \
           f"<b>–ö–∞—Ñ–µ–¥—Ä–∞:</b> {s.department}\n\n" \
           f"<b>–ö—É—Ä—Å:</b> {s.course}\n\n" \
           f"<b>–ì—Ä—É–ø–ø–∞:</b> {s.group}\n\n" \
           f"<b>–ö—É—Ä—Å–æ–≤—ã–µ:</b> {s.coursework}\n\n" \
           f"<b>–ó–Ω–∞–Ω–∏—è:</b> {s.knowledge}\n\n" \
           f"<b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {s.reg_date}\n"
    return stud


async def show_params(message: types.Message):
    s_id = int(message.from_user.id)
    user_show = select_user(s_id)
    u_type = user_type(s_id)
    if u_type is None:
        await message.answer('–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —ç—Ç–∞–ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.',
                             parse_mode='HTML')
    elif u_type[0] == 'student':
        await message.answer(f"üßë‚Äçüíª<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>\n\n" + print_stud(user_show), parse_mode='HTML',
                             reply_markup=change_stud_ikb)
    else:
        await message.answer(f"üßë‚Äçüíª<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>\n\n<b>–§–ò–û:</b> {user_show.name}\n\n", parse_mode='HTML')


async def show_params_inline(callback: types.CallbackQuery):
    s_id = int(callback.from_user.id)
    user_show = select_user(s_id)
    u_type = user_type(s_id)
    if u_type is None:
        await callback.message.edit_text('–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —ç—Ç–∞–ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.',
                                         parse_mode='HTML')
    elif u_type[0] == 'student':
        await callback.message.edit_text(f"üßë‚Äçüíª<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>\n\n" + print_stud(user_show), parse_mode='HTML',
                                         reply_markup=change_stud_ikb)
    else:
        await callback.message.edit_text(f"üßë‚Äçüíª<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>\n\n<b>–§–ò–û:</b> {user_show.name}\n\n", parse_mode='HTML')


def register_handlers_show(dp: Dispatcher):
    dp.register_message_handler(show_params, commands=['show'])
    dp.register_callback_query_handler(show_params_inline, text='show')